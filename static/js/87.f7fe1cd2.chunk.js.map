{"version":3,"file":"static/js/87.f7fe1cd2.chunk.js","mappings":"+QA8CA,I,sBACA,EAAe,IAA0B,yD,kBC5C5BA,EAASC,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8hBAqBtBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0CAKpBG,EAAQL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kCAIjBK,EAAWP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iCAIpBO,EAAOT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kCAIfS,EAAaX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,4FAOtBW,EAAkBb,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oFAO3Ba,EAAQf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8BAIjBe,EAAYjB,EAAAA,GAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,sDAKrBiB,EAAWnB,EAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,oEAMpBmB,GAAWrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAYuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,iD,SCwEpC,EAxHqB,WAAO,IAADsB,EAAAC,EAAAC,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,MAiBjB,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEF,OAFEF,EAAAC,KAAA,EAEnBX,GAAW,GAAMU,EAAAE,KAAA,GACSC,EAAAA,EAAAA,IAAgBxB,GAAS,KAAD,EAA5CoB,EAAWC,EAAAI,KACjBlB,EAAaa,GAAaC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1BM,QAAQC,MAAKP,EAAAK,IAAQ,QAEH,OAFGL,EAAAC,KAAA,GAErBX,GAAW,GAAOU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAErB,kBAVmB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWpBjB,GACF,GAAG,CAACf,IAEAU,EACF,OAAOuB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAGhB,IAAK5B,EACH,OAAO,KAGT,IAAQ6B,EACN7B,EADM6B,MAAOC,EACb9B,EADa8B,aAAcC,EAC3B/B,EAD2B+B,SAAUC,EACrChC,EADqCgC,OAAQC,EAC7CjC,EAD6CiC,YAAaC,EAC1DlC,EAD0DkC,eAGtDC,EAA0C,QAAjC5C,EAAGS,EAAUoC,4BAAoB,IAAA7C,OAAA,EAA9BA,EAAgC8C,KAChD,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAASF,EAATE,UAAWC,EAAIH,EAAJG,KAAI,OACpBD,IACEb,EAAAA,EAAAA,KAAA,MAAAe,SACGF,IACCb,EAAAA,EAAAA,KAAA,OACEgB,IAAG,kCAAAC,OAAoCJ,GACvCK,IAAKJ,EACLK,MAAO,CACLC,UAAW,GACXC,SAAU,IACVC,aAAc,OARbV,EAaV,IAGCW,EAAoBC,KAAKC,MAA+B,GAAzBpD,EAAUqD,cAC/C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAb,SAAA,EACEf,EAAAA,EAAAA,KAACtC,EAAAA,GAAI,CAACmE,GAAwB,QAAtBhE,EAAgB,QAAhBC,EAAEa,EAASmD,aAAK,IAAAhE,OAAA,EAAdA,EAAgBiE,YAAI,IAAAlE,EAAAA,EAAI,IAAIkD,UACpCf,EAAAA,EAAAA,KAAC7D,EAAM,CAAC6F,KAAK,SAAQjB,SAAC,eAGxBY,EAAAA,EAAAA,MAACpF,EAAO,CAAAwE,SAAA,EACNf,EAAAA,EAAAA,KAAA,OACEiC,MAAM,QACNC,OAAO,QACPlB,IACEV,EAAW,kCAAAW,OAC2BX,GAAW,GAAAW,OAC1CkB,GAETjB,IAAKX,KAEPoB,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,EACEY,EAAAA,EAAAA,MAAClF,EAAK,CAAAsE,SAAA,CACHb,EAAM,KAAGC,EAAaiC,MAAM,EAAG,GAAG,QAErCT,EAAAA,EAAAA,MAAC9E,EAAI,CAAAkE,SAAA,CAAC,eAAaQ,EAAkB,QACrCvB,EAAAA,EAAAA,KAACrD,EAAQ,CAAAoE,SAAC,cACVf,EAAAA,EAAAA,KAACnD,EAAI,CAAAkE,SAAEX,KACPJ,EAAAA,EAAAA,KAACrD,EAAQ,CAAAoE,SAAC,YACVf,EAAAA,EAAAA,KAACjD,EAAU,CAAAgE,SACRV,EAAOK,KAAI,SAAA2B,GAAK,OACfrC,EAAAA,EAAAA,KAAA,MAAAe,SAAoBsB,EAAMvB,MAAjBuB,EAAMzB,GAAqB,MAItB,OAAjBJ,EAAU,IAAeA,EAAU8B,OAAS,IAC3CX,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAb,SAAA,EACEf,EAAAA,EAAAA,KAACrD,EAAQ,CAAAoE,SAAC,0BACVY,EAAAA,EAAAA,MAAC1E,EAAe,CAAA8D,SAAA,CACbP,GACDR,EAAAA,EAAAA,KAAA,OACEiC,MAAM,MACNC,OAAO,KACPlB,IAAKuB,EACLrB,IAAI,8BAQhBlB,EAAAA,EAAAA,KAAC7C,EAAK,KAENwE,EAAAA,EAAAA,MAAA,OAAAZ,SAAA,EACEf,EAAAA,EAAAA,KAAC3C,EAAS,CAAA0D,SAAC,4BACXY,EAAAA,EAAAA,MAACpE,EAAQ,CAAAwD,SAAA,EACPf,EAAAA,EAAAA,KAAA,MAAAe,UACEf,EAAAA,EAAAA,KAACvC,EAAQ,CAACoE,GAAG,OAAMd,SAAC,YAEtBf,EAAAA,EAAAA,KAAA,MAAAe,UACEf,EAAAA,EAAAA,KAACvC,EAAQ,CAACoE,GAAG,UAASd,SAAC,kBAG3Bf,EAAAA,EAAAA,KAAC7C,EAAK,KAEN6C,EAAAA,EAAAA,KAACwC,EAAAA,GAAM,SAIf,C,+LC1IAC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAW,eAAA5D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA0D,EAAA,OAAA3D,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFmD,EAAAA,EAAAA,IAAU,8BAADxB,OAA+ByB,IAAW,KAAD,EAA3D,OAARE,EAAQxD,EAAAI,KAAAJ,EAAAyD,OAAA,SACPD,EAASE,KAAKC,SAAO,wBAAA3D,EAAAS,OAAA,GAAAX,EAAA,KAC7B,kBAHuB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAKXiD,EAAc,eAAArC,GAAA3B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgE,EAAMC,GAAK,IAAAN,EAAA,OAAA3D,IAAAA,MAAA,SAAAkE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EAChBmD,EAAAA,EAAAA,IAAU,wBAADxB,OACNyB,EAAO,qDAAAzB,OAAoDiC,IACnF,KAAD,EAFa,OAARN,EAAQO,EAAA3D,KAAA2D,EAAAN,OAAA,SAGPD,EAASE,KAAKC,SAAO,wBAAAI,EAAAtD,OAAA,GAAAoD,EAAA,KAC7B,gBAL0BG,GAAA,OAAAzC,EAAAb,MAAA,KAAAC,UAAA,KAOdR,EAAe,eAAA8D,GAAArE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqE,EAAMvF,GAAO,IAAA6E,EAAA,OAAA3D,IAAAA,MAAA,SAAAsE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAAiE,EAAAjE,KAAA,EACnBmD,EAAAA,EAAAA,IAAU,SAADxB,OACrBlD,EAAO,aAAAkD,OAAYyB,EAAO,oBACnC,KAAD,EAFa,OAARE,EAAQW,EAAA/D,KAAA+D,EAAAV,OAAA,SAGPD,EAASE,MAAI,wBAAAS,EAAA1D,OAAA,GAAAyD,EAAA,KACrB,gBAL2BE,GAAA,OAAAH,EAAAvD,MAAA,KAAAC,UAAA,KAOf0D,EAAS,eAAAC,GAAA1E,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0E,EAAM5F,GAAO,IAAA6E,EAAA,OAAA3D,IAAAA,MAAA,SAAA2E,GAAA,cAAAA,EAAAvE,KAAAuE,EAAAtE,MAAA,cAAAsE,EAAAtE,KAAA,EACbmD,EAAAA,EAAAA,IAAU,SAADxB,OACrBlD,EAAO,qBAAAkD,OAAoByB,EAAO,oBAC3C,KAAD,EAFa,OAARE,EAAQgB,EAAApE,KAAAoE,EAAAf,OAAA,SAGPD,EAASE,KAAKe,MAAI,wBAAAD,EAAA/D,OAAA,GAAA8D,EAAA,KAC1B,gBALqBG,GAAA,OAAAJ,EAAA5D,MAAA,KAAAC,UAAA,KAOTgE,EAAU,eAAAC,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgF,EAAMlG,GAAO,IAAA6E,EAAA,OAAA3D,IAAAA,MAAA,SAAAiF,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,cAAA4E,EAAA5E,KAAA,EACdmD,EAAAA,EAAAA,IAAU,SAADxB,OACrBlD,EAAO,qBAAAkD,OAAoByB,EAAO,2BAC3C,KAAD,EAFa,OAARE,EAAQsB,EAAA1E,KAAA0E,EAAArB,OAAA,SAGPD,EAASE,KAAKC,SAAO,wBAAAmB,EAAArE,OAAA,GAAAoE,EAAA,KAC7B,gBALsBE,GAAA,OAAAH,EAAAlE,MAAA,KAAAC,UAAA,I","sources":["images/TMDB.svg","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["var _defs, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTmdb(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 273.42 35.52\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".cls-1{fill:url(#linear-gradient);}\"), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"linear-gradient\",\n    y1: 17.76,\n    x2: 273.42,\n    y2: 17.76,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#90cea1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.56,\n    stopColor: \"#3cbec9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#00b3e5\"\n  })))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Asset 3\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_2\",\n    \"data-name\": \"Layer 2\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1-2\",\n    \"data-name\": \"Layer 1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M191.85,35.37h63.9A17.67,17.67,0,0,0,273.42,17.7h0A17.67,17.67,0,0,0,255.75,0h-63.9A17.67,17.67,0,0,0,174.18,17.7h0A17.67,17.67,0,0,0,191.85,35.37ZM10.1,35.42h7.8V6.92H28V0H0v6.9H10.1Zm28.1,0H46V8.25h.1L55.05,35.4h6L70.3,8.25h.1V35.4h7.8V0H66.45l-8.2,23.1h-.1L50,0H38.2ZM89.14.12h11.7a33.56,33.56,0,0,1,8.08,1,18.52,18.52,0,0,1,6.67,3.08,15.09,15.09,0,0,1,4.53,5.52,18.5,18.5,0,0,1,1.67,8.25,16.91,16.91,0,0,1-1.62,7.58,16.3,16.3,0,0,1-4.38,5.5,19.24,19.24,0,0,1-6.35,3.37,24.53,24.53,0,0,1-7.55,1.15H89.14Zm7.8,28.2h4a21.66,21.66,0,0,0,5-.55A10.58,10.58,0,0,0,110,26a8.73,8.73,0,0,0,2.68-3.35,11.9,11.9,0,0,0,1-5.08,9.87,9.87,0,0,0-1-4.52,9.17,9.17,0,0,0-2.63-3.18A11.61,11.61,0,0,0,106.22,8a17.06,17.06,0,0,0-4.68-.63h-4.6ZM133.09.12h13.2a32.87,32.87,0,0,1,4.63.33,12.66,12.66,0,0,1,4.17,1.3,7.94,7.94,0,0,1,3,2.72,8.34,8.34,0,0,1,1.15,4.65,7.48,7.48,0,0,1-1.67,5,9.13,9.13,0,0,1-4.43,2.82V17a10.28,10.28,0,0,1,3.18,1,8.51,8.51,0,0,1,2.45,1.85,7.79,7.79,0,0,1,1.57,2.62,9.16,9.16,0,0,1,.55,3.2,8.52,8.52,0,0,1-1.2,4.68,9.32,9.32,0,0,1-3.1,3A13.38,13.38,0,0,1,152.32,35a22.5,22.5,0,0,1-4.73.5h-14.5Zm7.8,14.15h5.65a7.65,7.65,0,0,0,1.78-.2,4.78,4.78,0,0,0,1.57-.65,3.43,3.43,0,0,0,1.13-1.2,3.63,3.63,0,0,0,.42-1.8A3.3,3.3,0,0,0,151,8.6a3.42,3.42,0,0,0-1.23-1.13A6.07,6.07,0,0,0,148,6.9a9.9,9.9,0,0,0-1.85-.18h-5.3Zm0,14.65h7a8.27,8.27,0,0,0,1.83-.2,4.67,4.67,0,0,0,1.67-.7,3.93,3.93,0,0,0,1.23-1.3,3.8,3.8,0,0,0,.47-1.95,3.16,3.16,0,0,0-.62-2,4,4,0,0,0-1.58-1.18,8.23,8.23,0,0,0-2-.55,15.12,15.12,0,0,0-2.05-.15h-5.9Z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTmdb);\nexport default __webpack_public_path__ + \"static/media/TMDB.bf7f470b3821af1da7fa249c87dadea3.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  padding: 10px 15px;\n  font-size: 16px;\n  background-color: #6d4b88;\n  border-radius: 6px;\n  border: none;\n  box-shadow: rgba(50, 50, 93, 0.1) 0 0 0 1px inset,\n    rgba(50, 50, 93, 0.1) 0 2px 5px 0, rgba(0, 0, 0, 0.07) 0 1px 1px 0;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    box-shadow: rgba(50, 50, 93, 0.1) 0 0 0 1px inset,\n      rgba(50, 50, 93, 0.2) 0 6px 15px 0, rgba(0, 0, 0, 0.1) 0 2px 2px 0,\n      rgba(50, 151, 211, 0.3) 0 0 0 4px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin-bottom: 8px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 24px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 24px;\n`;\n\nexport const ProductionsList = styled.ul`\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n  align-items: start;\n`;\n\nexport const Break = styled.hr`\n  margin-top: 4px;\n`;\n\nexport const InfoTitle = styled.h3`\n  margin-top: 24px;\n  margin-bottom: 8px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const InfoLink = styled(Link)`\n  &:hover {\n    color: #6d4b88;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\n\nimport { Loader } from 'components/Loader/Loader';\nimport noImage from 'images/no-image.jpg';\nimport partnerImage from 'images/TMDB.svg';\n\nimport {\n  Button,\n  Wrapper,\n  Title,\n  Subtitle,\n  Text,\n  GenresList,\n  ProductionsList,\n  Break,\n  InfoTitle,\n  InfoList,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDetail = async () => {\n      try {\n        setLoading(true);\n        const detailMovie = await getMovieDetails(movieId);\n        setMovieInfo(detailMovie);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieDetail();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (!movieInfo) {\n    return null;\n  }\n\n  const { title, release_date, overview, genres, poster_path, original_title } =\n    movieInfo;\n\n  const movieList = movieInfo.production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{\n                maxHeight: 50,\n                maxWidth: 200,\n                marginBottom: 10,\n              }}\n            />\n          )}\n        </li>\n      )\n  );\n\n  const roundedPopularity = Math.round(movieInfo.vote_average * 10);\n  return (\n    <>\n      <Link to={location.state?.from ?? '/'}>\n        <Button type=\"button\">Go back</Button>\n      </Link>\n\n      <Wrapper>\n        <img\n          width=\"360px\"\n          height=\"480px\"\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `${noImage}`\n          }\n          alt={original_title}\n        />\n        <div>\n          <Title>\n            {title} ({release_date.slice(0, 4)})\n          </Title>\n          <Text>User score: {roundedPopularity}%</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <GenresList>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n\n          {movieList[0] !== null && movieList.length > 0 && (\n            <>\n              <Subtitle>Production companies</Subtitle>\n              <ProductionsList>\n                {movieList}\n                <img\n                  width=\"200\"\n                  height=\"50\"\n                  src={partnerImage}\n                  alt=\"TMDB Service\"\n                />\n              </ProductionsList>\n            </>\n          )}\n        </div>\n      </Wrapper>\n\n      <Break />\n\n      <div>\n        <InfoTitle>Additional information</InfoTitle>\n        <InfoList>\n          <li>\n            <InfoLink to=\"cast\">Cast</InfoLink>\n          </li>\n          <li>\n            <InfoLink to=\"reviews\">Reviews</InfoLink>\n          </li>\n        </InfoList>\n        <Break />\n\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6498fc8ca7823e31f972fc635d8e33da';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getSearchQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Title","_templateObject3","Subtitle","_templateObject4","Text","_templateObject5","GenresList","_templateObject6","ProductionsList","_templateObject7","Break","_templateObject8","InfoTitle","_templateObject9","InfoList","_templateObject10","InfoLink","Link","_templateObject11","_movieInfo$production","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","getMovieDetail","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","detailMovie","_context","prev","next","getMovieDetails","sent","t0","console","error","finish","stop","apply","arguments","_jsx","Loader","title","release_date","overview","genres","poster_path","original_title","movieList","production_companies","map","_ref2","id","logo_path","name","children","src","concat","alt","style","maxHeight","maxWidth","marginBottom","roundedPopularity","Math","round","vote_average","_jsxs","_Fragment","to","state","from","type","width","height","noImage","slice","genre","length","partnerImage","Outlet","axios","API_KEY","getTrending","response","abrupt","data","results","getSearchQuery","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","getActors","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}